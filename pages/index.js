import { useEffect, useState } from "react";
import Modal from "react-modal";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import { supabase } from "../utils/supabaseClient";
import { useAuth } from "../components/Auth/Auth";
import Form from "../components/Form/Form";
import Header from "../components/Header/Header";

const customStyles = {
  overlay: {
    background: "rgba(0,0,0,0.4)",
  },
  content: {
    top: "50%",
    left: "50%",
    right: "auto",
    width: "400px",
    bottom: "auto",
    backgroundColor: "rgba(0,0,0,0.8)",
    marginRight: "-50%",
    transform: "translate(-50%, -50%)",
  },
};
const bg = {
  overlay: {
    background: "#FFFF00",
  },
};
import { modalIsOpen, setIsOpen } from "../components/Auth/Auth";
export default function Home({ images }) {
  function afterOpenModal() {
    // references are now sync'd and can be accessed.
  }

  function closeModal() {
    setIsOpen(false);
  }

  const [session, setSession] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const cn = (...classes) => {
    return classes.filter(Boolean).join(" ");
  };

  useEffect(() => {
    setSession(supabase.auth.session());

    supabase.auth.onAuthStateChange((event, session) => {
      setSession(session);
      console.log("session", session);
    });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="section">
        <div className={styles.information}>
          <img src="/wilandfotograf.png" alt="wilandfotograf" />
          <p>Välkommen till WilandFotograf. Jag är en hobby fotograf.</p>
        </div>
        <Modal
          isOpen={modalIsOpen}
          onAfterOpen={afterOpenModal}
          onRequestClose={closeModal}
          style={customStyles}
          contentLabel="Example Modal"
        >
          <Form />
        </Modal>
        <section className={styles.grid}>
          {images
            .map((o) => o.category)
            .filter((o, i, self) => self.indexOf(o) === i)
            .map((category, i) => (
              <div className={styles.gridItem} key={i}>
                <div className={`${styles.pic}`}>
                  {images.map((o, i) => {
                    if (o.category === category) {
                      return (
                        <Link href={`/categories/${o.category}`} key={o.id}>
                          <span>
                            <a>
                              <Image
                                src={`${process.env.NEXT_PUBLIC_SUPABASE_IMAGELINK}${o.category}/${o.categoryChild}/${o.img}`}
                                width={300}
                                height={300}
                                objectFit="cover"
                                className={cn(
                                  "dura",
                                  isLoading ? "blur" : "notBlur"
                                )}
                                onLoadingComplete={() => setIsLoading(false)}
                                alt={o.img}
                              />
                              <p className={styles.pictureDate}>{o.date}</p>
                            </a>
                          </span>
                        </Link>
                      );
                    }
                  })}

                  <div className={styles.text}>{category}</div>
                </div>
              </div>
            ))}
          {/* {categories &&
            categories.categories?.map((category, i) => (
              <div className={styles.gridItem} key={i}>
                <h4 className={styles.categories}>{category.category}</h4>
                <div className={`${styles.main} ${styles.pic}`}>
                
                  {category.pictures.map((picture) =>
                    picture.images.map((picture, ind) => (
                      <Link href={`/categories/${category.category}`} key={ind}>
                        <span>
                          <Image
                            src={picture.img}
                            width={300}
                            height={300}
                            key={ind}
                            alt={picture.img}
                          />
                          <p className={styles.pictureDate}>{picture.date}</p>
                        </span>
                      </Link>
                    ))
                  )} 
                </div>
              </div>
            ))} */}
        </section>
        <footer className="footer">
          <div>
            <h3>Önske resmål</h3>
            <div className="footerFlex">
              <ul>
                <li>Maldivera</li>
                <li>Tanzania (Safari)</li>
                <li>Australien</li>
              </ul>
            </div>
          </div>
          <div>
            <h3>Länder jag varit i</h3>
            <div className="footerFlex">
              <ul>
                <li>Spanien</li>
                <li>Zanzibar</li>
                <li>Kroatien (segelbåt)</li>
                <li>Turkiet</li>
                <li>Thailand</li>
              </ul>
              <ul>
                <li>Spanien</li>
                <li>Zanzibar</li>
                <li>Kroatien (segelbåt)</li>
                <li>Turkiet</li>
                <li>Thailand</li>
              </ul>
            </div>
          </div>
        </footer>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  try {
    const { data, error } = await supabase.from("GalleryTable").select("*");
    if (error || !data) {
      return { notFound: true };
    }
    return {
      props: {
        images: data,
      },
      revalidate: 10,
    };
  } catch (e) {
    return { notFound: true };
  }
}
